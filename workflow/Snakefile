configfile: 'config/config.yaml'
#report: "report/workflow.rst"

# loading packages used by helper rules
# and global variables
import glob
from pandas import read_table

# Loading the sampleheet for global use
SAMPLESHEET = read_table('config/samplesheet.tsv', index_col=0)

wildcard_constraints:
    srr = 'SRR[A-Za-z0-9]{7,8}',
    lib = 'ENC[A-Za-z0-9]{8}'

localrules: rename_before_hicpro

# Downloading hg38 files as needed
rule download_hg38_files:
    params:
        centromeres = 'results/refs/hg38/centromeres.txt.gz',
        gaps = 'results/refs/hg38/gap.txt.gz'
    output:
        genome = 'results/refs/hg38/hg38.fa.gz',
        genome_unzipped = 'results/refs/hg38/hg38.fa',
        genome_sizes = 'results/refs/hg38/hg38.chrom.sizes',
        centromeres = 'results/refs/hg38/centromeres.txt',
        gaps = 'results/refs/hg38/gap.txt'
    log:
        'results/refs/hg38/logs/rule_download_hg38_files.out'
    shell:
        """
            wget -O {output.genome} https://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.fa.gz 2> {log}
            wget -O {output.genome_sizes} https://hgdownload.soe.ucsc.edu/goldenPath/hg38/bigZips/hg38.chrom.sizes 2> {log}
            wget -O {params.centromeres} https://hgdownload.soe.ucsc.edu/goldenPath/hg38/database/centromeres.txt.gz 2> {log}
            wget -O {params.gaps} https://hgdownload.soe.ucsc.edu/goldenPath/hg38/database/gap.txt.gz 2> {log}

            # gunzip the centromeres and gaps
            gunzip --stdout {output.genome} > {output.genome_unzipped} 2> {log}
            gunzip {params.centromeres} 2> {log}
            gunzip {params.gaps} 2> {log}
        """


# Index the reference genome (GRCh38)
# http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#indexing-a-reference-genome
rule bowtie2_index_ref_genome:
    input:
        rules.download_hg38_files.output.genome_unzipped
    output:
        multiext('results/refs/hg38/hg38', '.1.bt2', '.2.bt2', '.3.bt2', '.4.bt2', '.rev.1.bt2', '.rev.2.bt2')
    params:
        base_out = 'results/refs/hg38/hg38'
    log:
        'results/refs/hg38/logs/rule_bowtie2_index_ref_genome.log'
    benchmark:
        'results/refs/hg38/benchmarks/rule_bowtie2_index_ref_genome.bmk'
    shell:
        """
            bowtie2-build {input} {params.base_out} >> {log} 2>&1
        """


# Digesting the reference genome with different RE's, for now
# I am including MboI, and HindIII. I followed the following instructions:
# https://github.com/nservant/HiC-Pro/blob/master/doc/UTILS.md.
rule digest_reference_genome:
    input:
        'results/refs/hg38/hg38.fa'
    output:
        mboi = 'results/refs/restriction_enzymes/hg38_mboi_digestion.bed',
        hindiii = 'results/refs/restriction_enzymes/hg38_hindiii_digestion.bed'
    log:
        'results/refs/hg38/logs/rule_digest_reference_genome.log'
    shell:
        """
            {config[python2]} {config[hicpro_dir]}/bin/utils/digest_genome.py -r mboi -o {output.mboi} {input}
            {config[python2]} {config[hicpro_dir]}/bin/utils/digest_genome.py -r hindiii -o {output.hindiii} {input}
        """


# rule to download sra fastq files which derived from paired sequencing
# using the grabseqs tool and modified code from the hisss snakemake pipeline
# https://github.com/louiejtaylor/hisss/blob/master/rules/sra_paired.rules
rule download_paired_fastq_sra:
    output:
        r1 = 'results/main/{cline}/reads/{cline}/{srr}_1.fastq.gz',
        r2 = 'results/main/{cline}/reads/{cline}/{srr}_2.fastq.gz',
        meta = 'results/main/{cline}/reads/{cline}/{srr}.meta.csv'
    log:
        'results/main/{cline}/logs/rule_download_paired_fastq_sra_{cline}_{srr}.log'
    benchmark:
        'results/main/{cline}/benchmarks/rule_download_paired_fastq_sra_{cline}_{srr}.bmk'
    shadow: 'shallow'
    params:
        outdir = 'results/main/{cline}/reads/{cline}/',
        meta = '{srr}.meta.csv'
    resources:
        mem_mb = 32000,
        nodes = 1,
        ppn = 4
    shell:
        """
            grabseqs sra -m {params.meta} \
                        -o {params.outdir} \
                        -r 4 \
                        -t {resources.ppn} \
                        {wildcards.srr} >> {log} 2>&1
        """


# rule to download fastq files from ENCODE which derived from paired sequencing
rule download_paired_fastq_encode:
    input:
        lib_file = 'results/main/{cline}/reads/{cline}.{lib}.tsv'
    output:
        r1 = 'results/main/{cline}/reads/{lib}_1.fastq.gz',
        r2 = 'results/main/{cline}/reads/{lib}_2.fastq.gz'
    log:
        'results/main/{cline}/logs/rule_download_paired_fastq_encode_{cline}_{lib}.log'
    shell:
        """
            r1_lib=$(head -n 1 {input.lib_file} | cut -f 1)
            r1_link="https://www.encodeproject.org/files/$r1_lib/@@download/$r1_lib.fastq.gz"

            r2_lib=$(tail -n 1 {input.lib_file} | cut -f 1)
            r2_link="https://www.encodeproject.org/files/$r2_lib/@@download/$r2_lib.fastq.gz"

            wget -O {output.r1} $r1_link
            wget -O {output.r2} $r2_link
        """

include: "rules/hicpro.smk"
include: "rules/hicnv.smk"
